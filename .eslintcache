[{"S:\\Projects\\three-notes\\src\\index.js":"1","S:\\Projects\\three-notes\\src\\App.js":"2","S:\\Projects\\three-notes\\src\\reportWebVitals.js":"3","S:\\Projects\\three-notes\\src\\components\\CanvasComponent\\CanvasComponent.jsx":"4","S:\\Projects\\three-notes\\src\\components\\CanvasComponent\\objects3D\\Scene.jsx":"5","S:\\Projects\\three-notes\\src\\hooks\\useDrag.js":"6","S:\\Projects\\three-notes\\src\\components\\CanvasComponent\\objects3D\\Controls.jsx":"7","S:\\Projects\\three-notes\\src\\components\\UserInterface\\UserInterface.jsx":"8","S:\\Projects\\three-notes\\src\\components\\CanvasComponent\\objects3D\\Note3D\\Note3D.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":1320,"mtime":1611851319248,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":348,"mtime":1611842876934,"results":"14","hashOfConfig":"11"},{"size":1369,"mtime":1611851983817,"results":"15","hashOfConfig":"11"},{"size":1189,"mtime":1611758188913,"results":"16","hashOfConfig":"11"},{"size":767,"mtime":1611833931715,"results":"17","hashOfConfig":"11"},{"size":1809,"mtime":1611847911853,"results":"18","hashOfConfig":"11"},{"size":2245,"mtime":1611851964878,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"172amnn",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"S:\\Projects\\three-notes\\src\\index.js",[],["44","45"],"S:\\Projects\\three-notes\\src\\App.js",[],"S:\\Projects\\three-notes\\src\\reportWebVitals.js",[],"S:\\Projects\\three-notes\\src\\components\\CanvasComponent\\CanvasComponent.jsx",[],"S:\\Projects\\three-notes\\src\\components\\CanvasComponent\\objects3D\\Scene.jsx",["46","47","48"],"import React, {Suspense, useEffect, useState, useRef} from \"react\";\r\nimport * as THREE from \"three\";\r\nimport {Note3D} from \"./Note3D/Note3D\";\r\nimport Controls from \"./Controls\";\r\n\r\n\r\nexport const Scene = ({notesArr, deleteNote}) => {\r\n\r\n    const [videoTexture] = useState(() => {\r\n        const video = document.createElement('video');\r\n        video.width = window.innerWidth;\r\n        video.height = window.innerHeight;\r\n        video.loop = true;\r\n        video.muted = true;\r\n        video.src = './assets/video.mp4';\r\n        video.setAttribute('webkit-playsinline', 'webkit-playsinline');\r\n        video.play();\r\n\r\n        const texture = new THREE.VideoTexture(video)\r\n        texture.minFilter = THREE.LinearFilter;\r\n        texture.format = THREE.RGBFormat;\r\n\r\n        return texture;\r\n    })\r\n\r\n    return (\r\n        <Controls>\r\n            <mesh rotation={[0, Math.PI / 2, 0]} position={[0, 0, 0]}>\r\n                <sphereBufferGeometry args={[500, 60, 40]} scale={[-1, 1, 1]}/>\r\n                <meshBasicMaterial args={[{map: videoTexture}]} side={THREE.BackSide}/>\r\n            </mesh>\r\n\r\n            {notesArr.map(noteData => (\r\n                <Note3D\r\n                    crossClickHandler={deleteNote}\r\n                    key={noteData.id}\r\n                    noteData={noteData}\r\n                />\r\n            ))}\r\n        </Controls>\r\n    )\r\n}","S:\\Projects\\three-notes\\src\\hooks\\useDrag.js",["49","50","51"],"import React, {  useRef, useEffect, useState, useCallback, useContext } from 'react'\r\nimport {camContext} from \"../components/CanvasComponent/objects3D/Controls\";\r\n\r\n\r\nexport function useDrag(onDrag, onStart, onEnd) {\r\n    const active = useRef(false);\r\n    const [, toggle] = useContext(camContext);\r\n    const [bind] = useState(() => ({\r\n        onPointerDown: event => {\r\n            event.stopPropagation();\r\n            event.target.setPointerCapture(event.pointerId);\r\n            active.current = true;\r\n            // We don't want the camera to move while we're dragging, toggle it off\r\n            toggle(false);\r\n            if (onStart) onStart();\r\n        },\r\n        onPointerUp: event => {\r\n            event.stopPropagation();\r\n            event.target.releasePointerCapture(event.pointerId);\r\n            active.current = false;\r\n            // Drag has concluded, toggle the controls on again\r\n            toggle(true);\r\n            if (onEnd) onEnd();\r\n        },\r\n        onPointerMove: event => {\r\n            if (active.current) {\r\n                event.stopPropagation();\r\n                onDrag(event.point);\r\n            }\r\n        }\r\n    }));\r\n    return bind;\r\n}","S:\\Projects\\three-notes\\src\\components\\CanvasComponent\\objects3D\\Controls.jsx",["52"],"import React, {useState, useEffect} from \"react\";\r\nimport { useThree } from \"react-three-fiber\";\r\nimport { OrbitControls } from '@react-three/drei/OrbitControls'\r\n\r\nexport const camContext = React.createContext()\r\n\r\nexport default function Controls({ children }) {\r\n    const { gl, camera, scene } = useThree()\r\n    useEffect(() => {\r\n        camera.position.z = 300;\r\n\r\n\r\n        console.log(scene);\r\n    }, [])\r\n    const api = useState(true)\r\n    return (\r\n        <>\r\n            <OrbitControls\r\n                args={[camera, gl.domElement]}\r\n                enableDamping\r\n                enabled={api[0]}\r\n                enablePan={false}\r\n            />\r\n            <camContext.Provider value={api}>{children}</camContext.Provider>\r\n        </>\r\n    );\r\n}\r\n","S:\\Projects\\three-notes\\src\\components\\UserInterface\\UserInterface.jsx",["53"],"import React, {useState} from \"react\";\r\nimport \"./UserInterface.css\";\r\n\r\nexport const UserInterface = ({addNewNote}) => {\r\n    const [noteText, setNoteText] = useState(\"\")\r\n    const [modalStatus, setModalStatus] = useState(false)\r\n\r\n    const handleOnDoneBtn = () => {\r\n        if (!noteText.length) return;\r\n\r\n        const newNote = {\r\n            text: noteText,\r\n        }\r\n\r\n        addNewNote(newNote);\r\n        setNoteText(\"\");\r\n        setModalStatus(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"uiBlock\">\r\n                <div className=\"uiBlock--back\"/>\r\n                <button className=\"uiBlock__btnNote\" onClick={() => setModalStatus(!modalStatus)}>\r\n                    <img src=\"noteIcon.svg\"/>\r\n                </button>\r\n            </div>\r\n            {modalStatus && <div className=\"noteTextModal\">\r\n                <div className=\"noteTextModal__head\">\r\n                    <h3>New Note</h3>\r\n                </div>\r\n                <div className=\"noteTextModal__body\">\r\n                    <textarea\r\n                        onChange={({target:{value}}) => setNoteText(value)}\r\n                        value={noteText}\r\n                    />\r\n                </div>\r\n                <div className=\"noteTextModal__bottom\">\r\n                    <button\r\n                        className=\"buttonMain colorBFail\"\r\n                        onClick={() => setModalStatus(false)}\r\n                    >\r\n                        Cancel\r\n                        </button>\r\n                    <button\r\n                        className=\"buttonMain colorBSuccess\"\r\n                        onClick={handleOnDoneBtn}\r\n                    >\r\n                        Done\r\n                    </button>\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n}","S:\\Projects\\three-notes\\src\\components\\CanvasComponent\\objects3D\\Note3D\\Note3D.jsx",["54","55","56"],"import React, {useRef, useEffect, useState, useContext, useMemo} from \"react\";\r\nimport * as THREE from \"three\";\r\nimport {useDrag} from \"../../../../hooks/useDrag\";\r\nimport {Text} from \"@react-three/drei/Text\";\r\n\r\nexport const Note3D = (\r\n    {\r\n        crossClickHandler,\r\n        noteData\r\n    }) => {\r\n    const {text, id, centerCoords: position} = noteData;\r\n    const [textPos, setTextPos] = useState(position);\r\n\r\n    const planeRef = useRef()\r\n\r\n    const bindDrag = useDrag(v => {\r\n        setTextPos(v.toArray())\r\n    })\r\n\r\n    const planeConfigs = {\r\n        width: 160,\r\n        height: 160,\r\n        segments: 32\r\n    }\r\n\r\n    return (\r\n        <group {...bindDrag}>\r\n            <Text\r\n                color=\"black\"\r\n                anchorX=\"center\"\r\n                anchorY=\"middle\"\r\n                textAlign=\"justify\"\r\n                position={[textPos[0], textPos[1], textPos[2] + 0.5]}\r\n                fontSize={13}\r\n                lineHeight={1}\r\n                maxWidth={150}\r\n                font=\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\"\r\n\r\n            >\r\n                {text}\r\n            </Text>\r\n            <Text\r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    crossClickHandler(id)\r\n                }}\r\n                color=\"red\"\r\n                anchorX=\"top\"\r\n                anchorY=\"bottom\"\r\n                textAlign=\"right\"\r\n                height={21}\r\n                position={[\r\n                    textPos[0] + planeConfigs.width / 2 - 15,\r\n                    textPos[1] + planeConfigs.height / 2 - 15,\r\n                    textPos[2] + 0.5]}\r\n                fontSize={14}\r\n                lineHeight={1}\r\n                maxWidth={150}\r\n                font=\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\"\r\n            >\r\n                X\r\n            </Text>\r\n            <mesh\r\n                ref={planeRef}\r\n                position={textPos}\r\n            >\r\n                <planeGeometry args={[planeConfigs.width, planeConfigs.height, planeConfigs.segments]}/>\r\n                <meshBasicMaterial color={0xffff00} side={THREE.DoubleSide}/>\r\n            </mesh>\r\n        </group>\r\n    )\r\n}",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":16,"nodeType":"63","messageId":"64","endLine":1,"endColumn":24},{"ruleId":"61","severity":1,"message":"65","line":1,"column":26,"nodeType":"63","messageId":"64","endLine":1,"endColumn":35},{"ruleId":"61","severity":1,"message":"66","line":1,"column":47,"nodeType":"63","messageId":"64","endLine":1,"endColumn":53},{"ruleId":"61","severity":1,"message":"67","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},{"ruleId":"61","severity":1,"message":"65","line":1,"column":26,"nodeType":"63","messageId":"64","endLine":1,"endColumn":35},{"ruleId":"61","severity":1,"message":"68","line":1,"column":47,"nodeType":"63","messageId":"64","endLine":1,"endColumn":58},{"ruleId":"69","severity":1,"message":"70","line":14,"column":8,"nodeType":"71","endLine":14,"endColumn":10,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":25,"column":21,"nodeType":"75","endLine":25,"endColumn":46},{"ruleId":"61","severity":1,"message":"65","line":1,"column":24,"nodeType":"63","messageId":"64","endLine":1,"endColumn":33},{"ruleId":"61","severity":1,"message":"76","line":1,"column":45,"nodeType":"63","messageId":"64","endLine":1,"endColumn":55},{"ruleId":"61","severity":1,"message":"77","line":1,"column":57,"nodeType":"63","messageId":"64","endLine":1,"endColumn":64},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","'React' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'camera.position' and 'scene'. Either include them or remove the dependency array.","ArrayExpression",["80"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'useMemo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [camera.position, scene]",{"range":"83","text":"84"},[409,411],"[camera.position, scene]"]