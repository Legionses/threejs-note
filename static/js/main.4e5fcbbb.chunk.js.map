{"version":3,"sources":["components/CanvasComponent/objects3D/Controls.jsx","components/CanvasComponent/objects3D/Note3D/Note3D.jsx","hooks/useDrag.js","components/CanvasComponent/objects3D/Scene.jsx","components/CanvasComponent/CanvasComponent.jsx","components/UserInterface/UserInterface.jsx","App.js","reportWebVitals.js","index.js"],"names":["camContext","React","createContext","Controls","children","useThree","gl","camera","scene","useEffect","position","z","console","log","api","useState","OrbitControls","args","domElement","enableDamping","enabled","enablePan","Provider","value","Note3D","crossClickHandler","noteData","text","id","centerCoords","textPos","setTextPos","planeRef","useRef","bindDrag","onDrag","onStart","onEnd","active","useContext","toggle","onPointerDown","event","stopPropagation","target","setPointerCapture","pointerId","current","onPointerUp","releasePointerCapture","onPointerMove","point","useDrag","v","toArray","planeConfigs","Text","color","anchorX","anchorY","textAlign","fontSize","lineHeight","maxWidth","font","onClick","e","height","ref","side","THREE","Scene","notesArr","deleteNote","video","document","createElement","width","window","innerWidth","innerHeight","loop","muted","src","setAttribute","play","texture","minFilter","format","videoTexture","rotation","Math","PI","scale","map","CanvasComponent","props","fallback","UserInterface","addNewNote","noteText","setNoteText","modalStatus","setModalStatus","className","onChange","length","App","setNotesArr","makeNewNote","useCallback","newNote","random","toString","substr","noteID","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e5fcbbb.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { useThree } from \"react-three-fiber\";\r\nimport { OrbitControls } from '@react-three/drei/OrbitControls'\r\n\r\nexport const camContext = React.createContext()\r\n\r\nexport default function Controls({ children }) {\r\n    const { gl, camera, scene } = useThree()\r\n    useEffect(() => {\r\n        camera.position.z = 300;\r\n\r\n\r\n        console.log(scene);\r\n    }, [])\r\n    const api = useState(true)\r\n    return (\r\n        <>\r\n            <OrbitControls\r\n                args={[camera, gl.domElement]}\r\n                enableDamping\r\n                enabled={api[0]}\r\n                enablePan={false}\r\n            />\r\n            <camContext.Provider value={api}>{children}</camContext.Provider>\r\n        </>\r\n    );\r\n}\r\n","import React, {useRef, useEffect, useState, useContext, useMemo} from \"react\";\r\nimport * as THREE from \"three\";\r\nimport {useDrag} from \"../../../../hooks/useDrag\";\r\nimport {Text} from \"@react-three/drei/Text\";\r\n\r\nexport const Note3D = (\r\n    {\r\n        crossClickHandler,\r\n        noteData\r\n    }) => {\r\n    const {text, id, centerCoords: position} = noteData;\r\n    const [textPos, setTextPos] = useState(position);\r\n\r\n    const planeRef = useRef()\r\n\r\n    const bindDrag = useDrag(v => {\r\n        setTextPos(v.toArray())\r\n    })\r\n\r\n    const planeConfigs = {\r\n        width: 160,\r\n        height: 160,\r\n        segments: 32\r\n    }\r\n\r\n    return (\r\n        <group {...bindDrag}>\r\n            <Text\r\n                color=\"black\"\r\n                anchorX=\"center\"\r\n                anchorY=\"middle\"\r\n                textAlign=\"justify\"\r\n                position={[textPos[0], textPos[1], textPos[2] + 0.5]}\r\n                fontSize={13}\r\n                lineHeight={1}\r\n                maxWidth={150}\r\n                font=\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\"\r\n\r\n            >\r\n                {text}\r\n            </Text>\r\n            <Text\r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    crossClickHandler(id)\r\n                }}\r\n                color=\"red\"\r\n                anchorX=\"top\"\r\n                anchorY=\"bottom\"\r\n                textAlign=\"right\"\r\n                height={21}\r\n                position={[\r\n                    textPos[0] + planeConfigs.width / 2 - 15,\r\n                    textPos[1] + planeConfigs.height / 2 - 15,\r\n                    textPos[2] + 0.5]}\r\n                fontSize={14}\r\n                lineHeight={1}\r\n                maxWidth={150}\r\n                font=\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\"\r\n            >\r\n                X\r\n            </Text>\r\n            <mesh\r\n                ref={planeRef}\r\n                position={textPos}\r\n            >\r\n                <planeGeometry args={[planeConfigs.width, planeConfigs.height, planeConfigs.segments]}/>\r\n                <meshBasicMaterial color={0xffff00} side={THREE.DoubleSide}/>\r\n            </mesh>\r\n        </group>\r\n    )\r\n}","import React, {  useRef, useEffect, useState, useCallback, useContext } from 'react'\r\nimport {camContext} from \"../components/CanvasComponent/objects3D/Controls\";\r\n\r\n\r\nexport function useDrag(onDrag, onStart, onEnd) {\r\n    const active = useRef(false);\r\n    const [, toggle] = useContext(camContext);\r\n    const [bind] = useState(() => ({\r\n        onPointerDown: event => {\r\n            event.stopPropagation();\r\n            event.target.setPointerCapture(event.pointerId);\r\n            active.current = true;\r\n            // We don't want the camera to move while we're dragging, toggle it off\r\n            toggle(false);\r\n            if (onStart) onStart();\r\n        },\r\n        onPointerUp: event => {\r\n            event.stopPropagation();\r\n            event.target.releasePointerCapture(event.pointerId);\r\n            active.current = false;\r\n            // Drag has concluded, toggle the controls on again\r\n            toggle(true);\r\n            if (onEnd) onEnd();\r\n        },\r\n        onPointerMove: event => {\r\n            if (active.current) {\r\n                event.stopPropagation();\r\n                onDrag(event.point);\r\n            }\r\n        }\r\n    }));\r\n    return bind;\r\n}","import React, {Suspense, useEffect, useState, useRef} from \"react\";\r\nimport * as THREE from \"three\";\r\nimport {Note3D} from \"./Note3D/Note3D\";\r\nimport Controls from \"./Controls\";\r\n\r\n\r\nexport const Scene = ({notesArr, deleteNote}) => {\r\n\r\n    const [videoTexture] = useState(() => {\r\n        const video = document.createElement('video');\r\n        video.width = window.innerWidth;\r\n        video.height = window.innerHeight;\r\n        video.loop = true;\r\n        video.muted = true;\r\n        video.src = './assets/video.mp4';\r\n        video.setAttribute('webkit-playsinline', 'webkit-playsinline');\r\n        video.play();\r\n\r\n        const texture = new THREE.VideoTexture(video)\r\n        texture.minFilter = THREE.LinearFilter;\r\n        texture.format = THREE.RGBFormat;\r\n\r\n        return texture;\r\n    })\r\n\r\n    return (\r\n        <Controls>\r\n            <mesh rotation={[0, Math.PI / 2, 0]} position={[0, 0, 0]}>\r\n                <sphereBufferGeometry args={[500, 60, 40]} scale={[-1, 1, 1]}/>\r\n                <meshBasicMaterial args={[{map: videoTexture}]} side={THREE.BackSide}/>\r\n            </mesh>\r\n\r\n            {notesArr.map(noteData => (\r\n                <Note3D\r\n                    crossClickHandler={deleteNote}\r\n                    key={noteData.id}\r\n                    noteData={noteData}\r\n                />\r\n            ))}\r\n        </Controls>\r\n    )\r\n}","import {Scene} from \"./objects3D/Scene\";\r\nimport React, {Suspense} from \"react\";\r\nimport {Canvas} from \"react-three-fiber\";\r\n\r\nconst CanvasComponent = props => (\r\n    <Canvas\r\n        id=\"rtfCanvas\"\r\n    >\r\n        <Suspense fallback={null}>\r\n            <Scene {...props}/>\r\n        </Suspense>\r\n    </Canvas>\r\n)\r\n\r\nexport default CanvasComponent;","import React, {useState} from \"react\";\r\nimport \"./UserInterface.css\";\r\n\r\nexport const UserInterface = ({addNewNote}) => {\r\n    const [noteText, setNoteText] = useState(\"\")\r\n    const [modalStatus, setModalStatus] = useState(false)\r\n\r\n    const handleOnDoneBtn = () => {\r\n        if (!noteText.length) return;\r\n\r\n        const newNote = {\r\n            text: noteText,\r\n        }\r\n\r\n        addNewNote(newNote);\r\n        setNoteText(\"\");\r\n        setModalStatus(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"uiBlock\">\r\n                <div className=\"uiBlock--back\"/>\r\n                <button className=\"uiBlock__btnNote\" onClick={() => setModalStatus(!modalStatus)}>\r\n                    <img src=\"noteIcon.svg\"/>\r\n                </button>\r\n            </div>\r\n            {modalStatus && <div className=\"noteTextModal\">\r\n                <div className=\"noteTextModal__head\">\r\n                    <h3>New Note</h3>\r\n                </div>\r\n                <div className=\"noteTextModal__body\">\r\n                    <textarea\r\n                        onChange={({target:{value}}) => setNoteText(value)}\r\n                        value={noteText}\r\n                    />\r\n                </div>\r\n                <div className=\"noteTextModal__bottom\">\r\n                    <button\r\n                        className=\"buttonMain colorBFail\"\r\n                        onClick={() => setModalStatus(false)}\r\n                    >\r\n                        Cancel\r\n                        </button>\r\n                    <button\r\n                        className=\"buttonMain colorBSuccess\"\r\n                        onClick={handleOnDoneBtn}\r\n                    >\r\n                        Done\r\n                    </button>\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n}","import React, {useState, useCallback} from \"react\";\nimport './App.css';\nimport CanvasComponent from \"./components/CanvasComponent/CanvasComponent\";\nimport {UserInterface} from \"./components/UserInterface/UserInterface\";\n\nfunction App() {\n    const [notesArr, setNotesArr] = useState([\n        {\n            id: \"first\",\n            text: \"First part\\nSecond part\\nThird part\",\n            centerCoords: [0, 0 ,0]\n        }, {\n            id: \"second\",\n            text: \"LOREM IPSUM DOLOR SIT AMET, CONSECTETUR ADIPISCING ELIT, SED DO EIUSMOD TEMPOR INCIDIDUNT UT LABORE ET DOLORE SED DO EIUSMOD TEMPOR INCIDIDUNT UT\",\n            centerCoords: [0, 0 ,0]\n        }\n        ]);\n\n    const makeNewNote = useCallback(noteData => {\n        const newNote = {\n            ...noteData,\n            centerCoords: [0, 0, 0],\n            id: '_' + Math.random().toString(36).substr(2, 9)\n        }\n        return setNotesArr([...notesArr,newNote])\n    },[notesArr])\n\n    const deleteNote = useCallback(\n        noteID => setNotesArr(notesArr.filter(({id}) => id !== noteID))\n        ,[notesArr])\n\n    return (\n            <div className=\"App\">\n                <CanvasComponent notesArr={notesArr} deleteNote={deleteNote}/>\n                <UserInterface addNewNote={makeNewNote}/>\n            </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}